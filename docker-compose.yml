version: '3'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zoo
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  spark:
    image: docker.io/bitnami/spark:3.3
    container_name: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - ./nb:/nb
      - ${PWD}:/home/lab

  spark-worker:
    image: docker.io/bitnami/spark:3.3
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ${PWD}:/home/lab

  jupyter:
    build: .
    container_name: jupyter
    environment:
      - JUPYTER_TOKEN=admin@123
    ports:
      - 8888:8888
    volumes:
      - ${PWD}:/home/lab
  
  charts:
    build:
      context: 'mongodb/charts'
      args:
        - EMAIL=admin@example.com
        - PASSWORD=StrongPassw0rd
    image: charts
    ports:
      - 8081:80
    environment:
      CHARTS_SUPPORT_WIDGET_AND_METRICS: 'on'
      CHARTS_MONGODB_URI: 'mongodb://mongo:27017/admin?replicaSet=rs0'
    volumes:
      - keys:/mongodb-charts/volumes/keys
      - logs:/mongodb-charts/volumes/logs
      - db-certs:/mongodb-charts/volumes/db-certs
      - web-certs:/mongodb-charts/volumes/web-certs
    depends_on:
      - mongo
    container_name: charts
  
  mongo:
    container_name: mongo
    hostname: mongo
    build:
      context: 'mongodb/mongo'
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    image: charts_mongo

volumes:
  keys:
  logs:
  db-certs:
  web-certs:
  mongo: